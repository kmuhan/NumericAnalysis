# -*- coding: utf-8 -*-
"""scipy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UWbofWgVVTFPfB8C7VWo0Z8Xj-ATEmkF

라이브러리 다운로드
"""

!pip install unidecode

from scipy import stats
import matplotlib.pyplot as plt
import numpy as np
import unidecode
import math
import time

from google.colab import drive
drive.mount("/content/drive")

filepath = '/content/drive/My Drive/Colab Notebooks/data/data6_max_avg.txt'

def MSE(y, pred):
  return np.mean(np.square(y - pred))

weight = []
longevity = []

with open(filepath, 'r') as file:
    for line in file:
        p = line.strip('\n')
        weight.append(math.log10(float(eval(p)['weight'])))
        longevity.append(math.log10(float(eval(p)['longevity'])))

w_learn = weight[:400]
l_learn = longevity[:400]

tic = time.perf_counter()

gradient, intercept, r_value, p_value, std_err = scipy.stats.linregress(w_learn, l_learn)

toc = time.perf_counter()

y_fit = gradient * np.asarray(weight) + intercept

# plt.plot(weight, longevity, 'ro', label='original data')
# plt.plot(weight, y_fit, 'b', label='fitted line')
# plt.plot(weight[400:], longevity[400:], color='blue')
# plt.legend()

plt.scatter(w_learn, l_learn, label='original data')
plt.plot(weight, y_fit, 'r-', label='fitted line')
plt.plot(weight[400:], longevity[400:], 'o', color='orange', label='test data')
plt.xlabel('log_{10}(weight)')
plt.ylabel('log_{10}(longevity)')
plt.grid()
plt.title('Scipy linregress')
plt.legend()

plt.show()
print(f'y =  [{gradient}]x + [{intercept}]')
print(f'MSE = {MSE(longevity[400:], gradient * np.asarray(weight[400:]) + intercept)}, Elapsed time = {(toc - tic) * 1000} milliseconds')